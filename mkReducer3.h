/*
 * Generated by Bluespec Compiler, version 2017.03.beta1 (build 35049, 2017-03-16)
 * 
 * On Thu Apr 19 13:07:16 IST 2018
 * 
 */

/* Generation options: */
#ifndef __mkReducer3_h__
#define __mkReducer3_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkPulse.h"


/* Class declaration for the mkReducer3 module */
class MOD_mkReducer3 : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST__unnamed_;
  MOD_Reg<tUInt32> INST__unnamed__1;
  MOD_Reg<tUInt32> INST__unnamed__10;
  MOD_Reg<tUInt32> INST__unnamed__11;
  MOD_Reg<tUInt32> INST__unnamed__12;
  MOD_Reg<tUInt32> INST__unnamed__13;
  MOD_Reg<tUInt32> INST__unnamed__14;
  MOD_Reg<tUInt32> INST__unnamed__15;
  MOD_Reg<tUInt32> INST__unnamed__16;
  MOD_Reg<tUInt32> INST__unnamed__17;
  MOD_Reg<tUInt32> INST__unnamed__18;
  MOD_Reg<tUInt32> INST__unnamed__19;
  MOD_Reg<tUInt32> INST__unnamed__2;
  MOD_Reg<tUInt32> INST__unnamed__20;
  MOD_Reg<tUInt32> INST__unnamed__21;
  MOD_Reg<tUInt32> INST__unnamed__22;
  MOD_Reg<tUInt32> INST__unnamed__23;
  MOD_Reg<tUInt32> INST__unnamed__24;
  MOD_Reg<tUInt32> INST__unnamed__25;
  MOD_Reg<tUInt32> INST__unnamed__26;
  MOD_Reg<tUInt32> INST__unnamed__27;
  MOD_Reg<tUInt32> INST__unnamed__28;
  MOD_Reg<tUInt32> INST__unnamed__29;
  MOD_Reg<tUInt32> INST__unnamed__3;
  MOD_Reg<tUInt32> INST__unnamed__30;
  MOD_Reg<tUInt32> INST__unnamed__31;
  MOD_Reg<tUInt32> INST__unnamed__32;
  MOD_Reg<tUInt32> INST__unnamed__33;
  MOD_Reg<tUInt32> INST__unnamed__34;
  MOD_Reg<tUInt32> INST__unnamed__35;
  MOD_Reg<tUInt32> INST__unnamed__36;
  MOD_Reg<tUInt32> INST__unnamed__37;
  MOD_Reg<tUInt32> INST__unnamed__38;
  MOD_Reg<tUInt32> INST__unnamed__39;
  MOD_Reg<tUInt32> INST__unnamed__4;
  MOD_Reg<tUInt32> INST__unnamed__40;
  MOD_Reg<tUInt32> INST__unnamed__41;
  MOD_Reg<tUInt32> INST__unnamed__42;
  MOD_Reg<tUInt32> INST__unnamed__43;
  MOD_Reg<tUInt32> INST__unnamed__44;
  MOD_Reg<tUInt32> INST__unnamed__45;
  MOD_Reg<tUInt32> INST__unnamed__46;
  MOD_Reg<tUInt32> INST__unnamed__47;
  MOD_Reg<tUInt32> INST__unnamed__48;
  MOD_Reg<tUInt32> INST__unnamed__49;
  MOD_Reg<tUInt32> INST__unnamed__5;
  MOD_Reg<tUInt32> INST__unnamed__50;
  MOD_Reg<tUInt32> INST__unnamed__51;
  MOD_Reg<tUInt32> INST__unnamed__52;
  MOD_Reg<tUInt32> INST__unnamed__53;
  MOD_Reg<tUInt32> INST__unnamed__54;
  MOD_Reg<tUInt32> INST__unnamed__55;
  MOD_Reg<tUInt32> INST__unnamed__56;
  MOD_Reg<tUInt32> INST__unnamed__57;
  MOD_Reg<tUInt32> INST__unnamed__58;
  MOD_Reg<tUInt32> INST__unnamed__59;
  MOD_Reg<tUInt32> INST__unnamed__6;
  MOD_Reg<tUInt32> INST__unnamed__60;
  MOD_Reg<tUInt32> INST__unnamed__61;
  MOD_Reg<tUInt32> INST__unnamed__62;
  MOD_Reg<tUInt32> INST__unnamed__63;
  MOD_Reg<tUInt32> INST__unnamed__64;
  MOD_Reg<tUInt32> INST__unnamed__65;
  MOD_Reg<tUInt32> INST__unnamed__66;
  MOD_Reg<tUInt32> INST__unnamed__67;
  MOD_Reg<tUInt32> INST__unnamed__68;
  MOD_Reg<tUInt32> INST__unnamed__69;
  MOD_Reg<tUInt32> INST__unnamed__7;
  MOD_Reg<tUInt32> INST__unnamed__70;
  MOD_Reg<tUInt32> INST__unnamed__71;
  MOD_Reg<tUInt32> INST__unnamed__72;
  MOD_Reg<tUInt32> INST__unnamed__73;
  MOD_Reg<tUInt32> INST__unnamed__74;
  MOD_Reg<tUInt32> INST__unnamed__75;
  MOD_Reg<tUInt32> INST__unnamed__76;
  MOD_Reg<tUInt32> INST__unnamed__77;
  MOD_Reg<tUInt32> INST__unnamed__78;
  MOD_Reg<tUInt32> INST__unnamed__79;
  MOD_Reg<tUInt32> INST__unnamed__8;
  MOD_mkPulse INST__unnamed__80;
  MOD_mkPulse INST__unnamed__81;
  MOD_mkPulse INST__unnamed__82;
  MOD_mkPulse INST__unnamed__83;
  MOD_mkPulse INST__unnamed__84;
  MOD_Reg<tUInt32> INST__unnamed__9;
  MOD_Reg<tUInt32> INST_clk;
  MOD_mkPulse INST_init;
  MOD_Fifo<tUInt32> INST_outstream;
 
 /* Constructor */
 public:
  MOD_mkReducer3(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUWide PORT_send_data;
 
 /* Publicly accessible definitions */
 public:
 
 /* Local definitions */
 private:
 
 /* Rules */
 public:
  void RL__CK();
  void RL_level();
  void RL_level_1();
  void RL_level_2();
  void RL_level_3();
  void RL_collectValue();
 
 /* Methods */
 public:
  void METH_send(tUWide ARG_send_data);
  tUInt8 METH_RDY_send();
  tUInt32 METH_reduced();
  tUInt8 METH_RDY_reduced();
  void METH_clean();
  tUInt8 METH_RDY_clean();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkReducer3 &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkReducer3 &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkReducer3 &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkReducer3 &backing);
};

#endif /* ifndef __mkReducer3_h__ */
